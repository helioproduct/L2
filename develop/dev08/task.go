package main

/*
Необходимо реализовать свой собственный UNIX-шелл-утилиту с поддержкой ряда простейших команд:


- cd <args> - смена директории (в качестве аргумента могут быть то-то и то)
- pwd - показать путь до текущего каталога
- echo <args> - вывод аргумента в STDOUT
- kill <args> - "убить" процесс, переданный в качесте аргумента (пример: kill TERM|KILL <pid>)
- ps - выводит общую информацию по запущенным процессам в формате *PID STATE NAME*


Так же требуется поддерживать функционал fork/exec-команд

Дополнительно необходимо поддерживать конвейер на пайпах (linux pipes, пример cmd1 | cmd2 | .... | cmdN).

*Шелл — это обычная консольная программа, которая будучи запущенной, в интерактивном сеансе выводит некое приглашение
в STDOUT и ожидает ввода пользователя через STDIN. Дождавшись ввода, обрабатывает команду согласно своей логике
и при необходимости выводит результат на экран. Интерактивный сеанс поддерживается до тех пор, пока не будет введена команда выхода (например \quit).
*/

/*
	Программа имеет следующие компоненты:
	Interpreter - Получает токены от Parser с помощью метода parse. Выполняет их. Не зависит от других компонентов.
	Parser - Считывает данные из потока ввода и собирает их в токены. Отвечает за работу с коснолю ввода. Зависит от Interpreter.
	Executor - Представляет из себя встроенную команду. Имеет метод exec(reader, writer, args). Зависит от Interpreter.
*/

// func init() {
// 	runtime.LockOSThread() // Заблокируем текущий тред
// }

func main() {
	intr := NewInterpreter()
	SetupCmds(intr)
	intr.Start()
}
